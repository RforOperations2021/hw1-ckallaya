library(shiny); runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
rawdata_final()
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
runApp('hw1-ckallaya3.R')
library(shiny); runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
library(shiny); runApp('hw1-ckallaya.R')
rawdata$year
rawdata <- read.csv("D:/Spring_2021/RShiny/HW1/hw1-ckallaya/rawdata.csv")
rawdata$year
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
library(rsconnect)
library(shiny); runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
runApp('hw1-ckallaya.R')
knitr::opts_chunk$set(echo = TRUE)
### Load helper packages ###
loadlibs = function(libs) {
for(lib in libs) {
class(lib)
if(!do.call(require,as.list(lib))) {install.packages(lib)}
do.call(require,as.list(lib))
}
}
libs = c("tidyverse","data.table","lubridate","stargazer", "shiny", "qwraps2")
loadlibs(libs)
options(qwraps2_markup = "markdown")
# set this to where you write/run your code
setwd("D:/Spring_2021/ML/Assignments/Assignment_2")
mimic2dDirectory = "D:/Spring_2021/ML/Assignments/Assignment_2"
# Load ICU stay table
icustay <- fread(paste0(mimic2dDirectory, "/icustay_detail.csv")) %>% as_tibble()
# Retain rows corresponding to first hospital visits
icustay_first_hosp <- icustay[icustay$hospital_first_flg == "Y", ]
# Retain columns for gender, height, weight (first), SAPS (sapsi_first), SOFA (sofa_first), and in-hospital death
icustay_first_hosp_final <-subset(icustay_first_hosp, select = c("gender", "height", "weight_first", "sapsi_first", "sofa_first", "hospital_expire_flg"))
# Create another column called age_at_death. Then calculate age at death
icustay_first_hosp_final$age_at_admit <- (as_datetime(icustay_first_hosp$hospital_admit_dt) - lubridate::as_datetime(icustay_first_hosp$dob)) %>% as.duration() %>% as.numeric("years")
age_at_admit <- data.table(icustay_first_hosp_final$age_at_admit)
# Convert columns into numbers and factors.
col_factor <- c("gender", "hospital_expire_flg")
col_num <- c("height", "weight_first", "sapsi_first", "sofa_first")
icustay_first_hosp_final[col_num] <- lapply(icustay_first_hosp_final[col_num], as.numeric)
icustay_first_hosp_final[col_factor] <- lapply(icustay_first_hosp_final[col_factor], as.factor)
# Summarise the resulting population size (N)
pop_size <- icustay_first_hosp_final %>%  summarise(Freq=n())
# Age and gender distributions (data summary table)
data_summary <-
list("Age" =
list("min"       = ~ min(age_at_admit),
"median (IQR)" = ~qwraps2::median_iqr(age_at_admit),
"mean (sd)" = ~ qwraps2::mean_sd(age_at_admit),
"max"       = ~ max(age_at_admit)),
"Gender" =
list("Female" = ~ qwraps2::n_perc0(na.omit(gender) %in% "F"),
"Male"  = ~ qwraps2::n_perc0(na.omit(gender) %in% "M"),
"NA" = ~ qwraps2::n_perc0(is.na(gender))))
options(qwraps2_markup = "markdown")
data_tbl <- summary_table(icustay_first_hosp_final, data_summary)
nrow(icustay_first_hosp_final
)
0.75*nrow(icustay_first_hosp_final)
train <- sample(1:nrow(icustay_first_hosp_final),0.75*nrow(icustay_first_hosp_final))
View(train)
nrow(icustay_first_hosp_final.test)
set.seed(10)
train <- sample(1:nrow(icustay_first_hosp_final),0.75*nrow(icustay_first_hosp_final))
icustay_first_hosp_final.test <- icustay_first_hosp_final[-train,]
train <- sample(1:nrow(icustay_first_hosp_final),0.75*nrow(icustay_first_hosp_final))
nrow(icustay_first_hosp_final.test)
icustay_first_hosp_final.train <- icustay_first_hosp_final[train,]
nrow(icustay_first_hosp_final.train)
create_train_test(icustay_first_hosp_final, size = 0.75, train = TRUE)
### Load helper packages ###
loadlibs = function(libs) {
for(lib in libs) {
class(lib)
if(!do.call(require,as.list(lib))) {install.packages(lib)}
do.call(require,as.list(lib))
}
}
libs = c("tidyverse","data.table","lubridate","stargazer", "shiny", "qwraps2", "dplyr")
loadlibs(libs)
options(qwraps2_markup = "markdown")
create_train_test(icustay_first_hosp_final, size = 0.75, train = TRUE)
